version: "3.8"

services:

  fake-confluent-cloud:
    build: ./fake_dependencies/confluent-cloud
    ports:
      - 5051:8080

  database:
    image: postgres:latest
    ports:
    - 5432:5432
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=p

  pgup:
    build: ./db
    depends_on:
    - database
    # volumes:
    # - ${PWD}/db/export:/tmp
    environment:
    # - DEBUG=1                     # enable script debugging
    - LOCAL_DEVELOPMENT=1           # will CREATE DATABASE ${PGDATABASE} every time
    - PGDATABASE=db                 # database name
    - PGHOST=database               # docker-compose service name
    - PGUSER=postgres               # same as above
    - PGPASSWORD=p                  # same as above
    - PGSSLMODE=disable             # ignore SSLMODE for local development

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: "cub kafka-ready -b localhost:9092 1 2"
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 30s

  kafka-setup:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      kafka:
        condition: service_healthy
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                      sleep 5 && \
                      cub kafka-ready -b kafka:29092 1 20 && \
                      kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic cloudengineering.selfservice.kafkatopic && \
                      kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic cloudengineering.selfservice.kafkaclusteraccess && \
                      kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic cloudengineering.confluentgateway.provisioning'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  outbox:
    image: public.ecr.aws/d8r0z9h2/dafda-gendis:0.9.1
    depends_on:
      kafka-setup:
        condition: service_completed_successfully
    environment:
      - DEFAULT_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - DB_CONNECTION_STRING=User ID=postgres;Password=p;Host=database;Port=5432;Database=db
